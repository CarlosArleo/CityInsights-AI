rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // --- TOP-LEVEL COLLECTIONS ---

    // Rule for creating and managing project documents
    match /projects/{projectId} {
      // A user can CREATE a project if they are logged in AND the new document's
      // ownerId field matches their own user ID.
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;

      // A user can READ, UPDATE, or DELETE a project if they are logged in AND
      // the existing document's ownerId field matches their own user ID.
      allow read, update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;

      // A user can LIST projects only if their query filters by their own userId.
      allow list: if request.auth != null && request.query.resource.data.ownerId == request.auth.uid;
    }

    // Rule for the disparateImpactAnalyses collection
    match /disparateImpactAnalyses/{analysisId} {
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow read, update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    // --- SUB-COLLECTION RULES ---
    // This single rule block secures all sub-collections efficiently.
    match /projects/{projectId}/{collection}/{docId} {
      allow read, list, write: if request.auth != null && get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId == request.auth.uid;
    }
  }
}