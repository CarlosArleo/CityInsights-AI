
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      // A user can GET a project if their UID matches the project's ownerId.
      allow get: if request.auth.uid == resource.data.ownerId;

      // A user can LIST projects if the query is filtered by their UID.
      // This is crucial for the dashboard view.
      allow list: if request.auth.uid == request.query.where.ownerId;

      // A user can CREATE a project if the new document's ownerId is their own UID.
      // This is the key fix. It checks the data being sent, not existing data.
      allow create: if request.auth.uid == request.resource.data.ownerId;

      // A user can UPDATE or DELETE a project if they are the owner.
      allow update, delete: if request.auth.uid == resource.data.ownerId;

      // Rules for the 'files' sub-collection
      match /files/{fileId} {
        // Allow all operations if the user owns the parent project.
        // It checks the ownership of the 'project' document.
        allow read, write, create, delete: if request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId;
      }

      // Rules for the 'reviews' sub-collection
      match /reviews/{reviewId} {
        // Allow all operations if the user owns the parent project.
        allow read, write, create, delete: if request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId;
      }
    }
  }
}
